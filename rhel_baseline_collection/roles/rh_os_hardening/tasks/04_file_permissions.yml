---
# Set permissions on core system files
- name: Set permissions on authentication files
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { path: '/etc/passwd', mode: '0644' }
    - { path: '/etc/ssh/sshd_config', mode: '0600' }
    - { path: '/etc/shadow', mode: '0000' }
    - { path: '/etc/gshadow', mode: '0000' }
    - { path: '/etc/group', mode: '0644' }

- name: Check if /etc/at.allow exists
  stat:
    path: /etc/at.allow
  register: at_allow_exists

- name: Ensure /etc/at.allow is not a directory
  ansible.builtin.file:
    path: /etc/at.allow
    state: absent
  # Check if it exists AND is a directory
  when: at_allow_exists.stat.exists and at_allow_exists.stat.isdir

- name: Set permissions on cron and at files
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0600'
    state: touch
  loop:
    - /etc/crontab
    - /etc/anacrontab
    - /etc/cron.allow
    - /etc/cron.deny
    - /etc/at.allow
    - /etc/at.deny

- name: Set permissions on cron directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0700'
    state: directory
  loop:
    - /etc/cron.daily
    - /etc/cron.hourly
    - /etc/cron.weekly
    - /etc/cron.monthly
    - /etc/cron.d

- name: Set permissions on log files
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: 'root' 
    mode: '0640'
    state: touch
  loop:
    - /var/log/unused.log # Might not exist
    - /var/log/syslog     # Might not exist on RHEL
    - /var/log/kern.log   # Might not exist on RHEL
    - /var/log/messages
    - /var/log/daemon.log # Might not exist on RHEL
    - /var/log/cron
    - /var/log/boot.log
    - /var/log/maillog
    - /var/log/secure

# # --- RHEL 8+ Specific Tasks ---
- name: Configure Auditd and system files (RHEL 8+)
  when: ansible_distribution_major_version | int >= 8
  block:
    - name: Deploy auditd configuration files from templates
      ansible.builtin.template:
        src: "{{ item.template }}.j2"
        dest: "/etc/audit/{{ item.dest }}"
        owner: root
        group: root
        mode: '0640'
      loop:
        - {template: 'auditd-conf-rhel', dest: 'auditd.conf'}
        - {template: 'auditd-harden-rules-rhel', dest: 'rules.d/harden.rules'}
        - {template: '50-user_emulation.rules', dest: 'rules.d/50-user_emulation.rules'}
        - {template: '50-kernel_modules.rules', dest: 'rules.d/50-kernel_modules.rules'}
        - {template: '50-login.rules', dest: 'rules.d/50-login.rules'}
        - {template: '50-MAC-policy.rules', dest: 'rules.d/50-MAC-policy.rules'}
        - {template: '50-perm_mod.rules', dest: 'rules.d/50-perm_mod.rules'}

    - name: Configure rsyslog (RHEL 8+)
      ansible.builtin.template:
        src: "rsyslog-{{ log_config_type }}-rhel8.j2"
        dest: /etc/rsyslog.conf
        owner: root
        group: root
        mode: '0644'
      when: "'rsyslog' not in group_names"
      notify: restart rsyslog
      vars:
        log_config_type: "{{ 'production' if inventory_hostname.lower().startswith('p') else 'test' }}"

    - name: Deploy system-wide umask config
      ansible.builtin.template:
        src: 50-systemwide_umask.sh.j2
        dest: /etc/profile.d/50-systemwide_umask.sh
        owner: root
        group: root
        mode: '0640'

    - name: Deploy pwquality config
      ansible.builtin.template:
        src: 50-pwquality.j2 
        dest: /etc/security/pwquality.conf.d/50-pwquality.conf
        owner: root
        group: root
        mode: '0640'

    - name: Configure systemd journald (using ini_file)
      ansible.builtin.ini_file:
        path: /etc/systemd/journald.conf
        section: Journal
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        backup: yes
      loop:
        - { key: 'ForwardToSyslog', value: 'yes' }
        - { key: 'Storage', value: 'persistent' }
        - { key: 'Compress', value: 'yes' }
        - { key: 'SystemMaxUse', value: '500M' }
        - { key: 'SystemKeepFree', value: '350M' }
        - { key: 'RuntimeMaxUse', value: '256M' }
        - { key: 'RuntimeKeepFree', value: '128M' }
        - { key: 'MaxFileSec', value: '2week' }
      notify: restart systemd-journald


    - name: Deploy sysctl configuration based on standard
      ansible.builtin.template:
        # This Jinja block will render as a clean string: "sysctl-rhel8.j2"
        # The template module will then correctly find it in the templates/ dir.
        src: >-
          {%- if 'sap' in group_names -%}
          sysctl-rhel8-SAP.j2
          {%- elif 'el' in group_names -%}
          sysctl-rhel8-EL.j2
          {%- else -%}
          sysctl-rhel8.j2
          {%- endif -%}
        dest: /etc/sysctl.d/90-chef.conf
        owner: root
        group: root
        mode: '0644'
      notify: reload sysctl



# --- RHEL 7 Specific Tasks ---
- name: Configure Grub and init (RHEL 7)
  when: ansible_distribution_major_version == '7'
  block:
    - name: Set permissions on grub.cfg
      ansible.builtin.file:
        # Path differs slightly from Chef (/boot/grub2 vs /etc)
        path: /etc/grub2.cfg
        owner: root
        group: root
        mode: '0600'
        # manage_symlink_source might be handled by follow: yes (default)

    - name: Deploy grub user.cfg
      ansible.builtin.template:
        src: user-rhel7.j2 # Chef used user-rhel7.erb
        dest: /boot/grub2/user.cfg
        owner: root
        group: root
        mode: '0600'

    - name: Deploy /etc/sysconfig/init
      ansible.builtin.template:
        src: init-rhel7.j2 # Chef used init-rhel7.erb
        dest: /etc/sysconfig/init
        owner: root
        group: root
        mode: '0644'

    - name: Deploy sysctl configuration based on standard
      ansible.builtin.template:
        # This Jinja block will render as a clean string: "sysctl-rhel8.j2"
        # The template module will then correctly find it in the templates/ dir.
        src: >-
          {%- if 'sap' in group_names -%}
          sysctl-rhel7-SAP.j2
          {%- elif 'el' in group_names -%}
          sysctl-rhel7-EL.j2
          {%- else -%}
          sysctl-rhel7.j2
          {%- endif -%}
        dest: /etc/sysctl.d/90-chef.conf
        owner: root
        group: root
        mode: '0644'
      notify: reload sysctl

    - name: Configure rsyslog (RHEL 7)
      ansible.builtin.template:
        src: "rsyslog-{{ log_config_type }}-rhel7.j2"
        dest: /etc/rsyslog.conf
        owner: root
        group: root
        mode: '0644'
      when: "'rsyslog' not in group_names"
      notify: restart rsyslog
      vars:
        log_config_type: "{{ 'production' if inventory_hostname.lower().startswith('p') else 'test' }}"

# --- RHEL 6 Specific Tasks ---
- name: Configure Grub and init (RHEL 6)
  when: ansible_distribution_major_version == '6'
  block:
    - name: Set permissions on grub.cfg
      ansible.builtin.file:
        path: /etc/grub.cfg # RHEL 6 path
        owner: root
        group: root
        mode: '0600'

    - name: Deploy /etc/sysconfig/init
      ansible.builtin.template:
        src: init-rhel6.j2 # Chef used init-rhel6.erb
        dest: /etc/sysconfig/init
        owner: root
        group: root
        mode: '0644'

    - name: Deploy /etc/sysctl.conf
      ansible.builtin.template:
        src: sysctl-rhel6.j2
        dest: /etc/sysctl.conf
        owner: root
        group: root
        mode: '0644'

    - name: Configure rsyslog (RHEL 6)
      ansible.builtin.template:
        src: "rsyslog-rhel6.j2"
        dest: /etc/rsyslog.conf
        owner: root
        group: root
        mode: '0644'
      when: 
        - "'rsyslog' not in group_names"
        - "inventory_hostname.lower().startswith('p')"
      notify: restart rsyslog




# --- Clean up legacy files ---
# - name: Remove insecure legacy auth files from all home directories
#   block:
- name: Get list of all user accounts
  ansible.builtin.getent:
    database: passwd
  register: passwd_entries 

# - name: Display the home directories found
#   ansible.builtin.debug:
#     var: passwd_entries

- name: Create a list of just the home directories
  ansible.builtin.set_fact:
    # Use the correct variable 'passwd_entries'
    home_dirs: "{{ passwd_entries.ansible_facts.getent_passwd.values() | map(attribute=4) | unique | list }}"

# - name: Display the home directories found
#   ansible.builtin.debug:
#     var: home_dirs

- name: Remove system-wide legacy auth files
  ansible.builtin.file:
    path: "{{ item[0] }}/{{ item[1] }}"
    state: absent
  with_nested:
    - "{{ home_dirs }}"
    - [ ".rhosts", ".netrc", ".shosts" ]

# - name: Display the final list
#   ansible.builtin.debug:
#     var: home_dirs

- name: Remove system-wide legacy auth files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/hosts.equiv
    - /etc/shosts.equiv